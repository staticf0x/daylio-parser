name: Check

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  unittests:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        uses: abatilo/actions-poetry@v2

      - name: Setup a local virtual environment
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local

      - uses: actions/cache@v4
        name: Setup cache
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        run: poetry install

      - name: Run pytest
        run: poetry run pytest -v --cov=daylio_parser --cov-report term-missing tests/

  checks:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install poetry
        uses: abatilo/actions-poetry@v2

      - name: Setup a local virtual environment
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local

      - uses: actions/cache@v4
        name: Setup cache
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        run: poetry install

      - name: isort
        run: poetry run isort --check --diff daylio_parser/ tests/

      - name: black
        run: poetry run black --check --diff daylio_parser/ tests/

      - name: ruff
        run: poetry run ruff check daylio_parser/ tests/
        continue-on-error: true

      - name: mypy
        run: poetry run mypy daylio_parser/
